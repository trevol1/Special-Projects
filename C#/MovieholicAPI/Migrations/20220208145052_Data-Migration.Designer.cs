// <auto-generated />
using MovieholicAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;

namespace MovieholicAPI.Migrations
{
    [DbContext(typeof(MoviesContext))]
    [Migration("20220208145052_Data-Migration")]
    partial class DataMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MovieholicAPI.Models.Domain.Character", b =>
                {
                    b.Property<int>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CharacterId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            CharacterId = 1,
                            Alias = "Spider-Man",
                            FullName = "Peter Parker",
                            Gender = "Male",
                            Picture = "https://images.hindustantimes.com/rf/image_size_960x540/HT/p2/2020/05/12/Pictures/_4c4e601e-9425-11ea-9070-932bbf5d90a5.jpg"
                        },
                        new
                        {
                            CharacterId = 2,
                            Alias = "MJ",
                            FullName = "Mary Jane Watson",
                            Gender = "Female",
                            Picture = "https://www.spidermancrawlspace.com/wp-content/uploads/2019/07/1d74ea8c597b21b1a7d23e03da298a86.jpg"
                        },
                        new
                        {
                            CharacterId = 3,
                            FullName = "Harry Osborn",
                            Gender = "Male",
                            Picture = "https://static.wikia.nocookie.net/spiderman-films/images/a/ab/F_25672.jpg/revision/latest/scale-to-width-down/250?cb=20130708091735"
                        },
                        new
                        {
                            CharacterId = 4,
                            Alias = "Mr. Incredible",
                            FullName = "Bob Parr",
                            Gender = "Male",
                            Picture = "https://static.wikia.nocookie.net/disney/images/d/d2/Profile_-_Bob_Parr.jpeg/revision/latest?cb=20190313155821"
                        },
                        new
                        {
                            CharacterId = 5,
                            Alias = "Elastigirl",
                            FullName = "Helen Parr",
                            Gender = "Female",
                            Picture = "https://ficquotes.com/images/characters/helen-parr-the-incredible.jpg"
                        });
                });

            modelBuilder.Entity("MovieholicAPI.Models.Domain.Franchise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Franchises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A high school kid becomes Spider-Man",
                            Name = "Spider-Man, Tobey Maguire version"
                        },
                        new
                        {
                            Id = 2,
                            Description = "A family of superheroes",
                            Name = "The Incredibles"
                        });
                });

            modelBuilder.Entity("MovieholicAPI.Models.Domain.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Director")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Trailer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MovieId");

                    b.HasIndex("FranchiseId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            Director = "Sam Raimi",
                            FranchiseId = 1,
                            Genre = "Action",
                            Picture = "https://m.media-amazon.com/images/M/MV5BZDEyN2NhMjgtMjdhNi00MmNlLWE5YTgtZGE4MzNjMTRlMGEwXkEyXkFqcGdeQXVyNDUyOTg3Njg@._V1_FMjpg_UX1000_.jpg",
                            ReleaseYear = 2002,
                            Title = "Spider-Man",
                            Trailer = "https://www.youtube.com/watch?v=_yhFofFZGcc"
                        },
                        new
                        {
                            MovieId = 2,
                            Director = "Sam Raimi",
                            FranchiseId = 1,
                            Genre = "Action",
                            Picture = "https://m.media-amazon.com/images/M/MV5BMzY2ODk4NmUtOTVmNi00ZTdkLTlmOWYtMmE2OWVhNTU2OTVkXkEyXkFqcGdeQXVyMTQxNzMzNDI@._V1_.jpg",
                            ReleaseYear = 2004,
                            Title = "Spider-Man 2",
                            Trailer = "https://www.youtube.com/watch?v=1s9Yln0YwCw"
                        },
                        new
                        {
                            MovieId = 3,
                            Director = "Sam Raimi",
                            FranchiseId = 1,
                            Genre = "Action",
                            Picture = "https://m.media-amazon.com/images/M/MV5BYTk3MDljOWQtNGI2My00OTEzLTlhYjQtOTQ4ODM2MzUwY2IwXkEyXkFqcGdeQXVyNTIzOTk5ODM@._V1_.jpg",
                            ReleaseYear = 2007,
                            Title = "Spider-Man 3",
                            Trailer = "https://www.youtube.com/watch?v=zjdtiQx7RIw"
                        },
                        new
                        {
                            MovieId = 4,
                            Director = "Brad Bird",
                            FranchiseId = 2,
                            Genre = "Animation",
                            Picture = "https://m.media-amazon.com/images/M/MV5BMTY5OTU0OTc2NV5BMl5BanBnXkFtZTcwMzU4MDcyMQ@@._V1_FMjpg_UX1000_.jpg",
                            ReleaseYear = 2004,
                            Title = "The Incredibles",
                            Trailer = "https://www.youtube.com/watch?v=SOKY7XyOHTA"
                        },
                        new
                        {
                            MovieId = 5,
                            Director = "Brad Bird",
                            FranchiseId = 2,
                            Genre = "Animation",
                            Picture = "https://m.media-amazon.com/images/M/MV5BMTEzNzY0OTg0NTdeQTJeQWpwZ15BbWU4MDU3OTg3MjUz._V1_FMjpg_UX1000_.jpg",
                            ReleaseYear = 2018,
                            Title = "Incredibles 2",
                            Trailer = "https://www.youtube.com/watch?v=i5qOzqD9Rms"
                        });
                });

            modelBuilder.Entity("MovieAndCharacter", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.HasKey("MovieId", "CharacterId");

                    b.HasIndex("CharacterId");

                    b.ToTable("MovieAndCharacter");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            CharacterId = 1
                        },
                        new
                        {
                            MovieId = 1,
                            CharacterId = 2
                        },
                        new
                        {
                            MovieId = 1,
                            CharacterId = 3
                        },
                        new
                        {
                            MovieId = 2,
                            CharacterId = 1
                        },
                        new
                        {
                            MovieId = 2,
                            CharacterId = 2
                        },
                        new
                        {
                            MovieId = 2,
                            CharacterId = 3
                        },
                        new
                        {
                            MovieId = 3,
                            CharacterId = 1
                        },
                        new
                        {
                            MovieId = 3,
                            CharacterId = 2
                        },
                        new
                        {
                            MovieId = 3,
                            CharacterId = 3
                        },
                        new
                        {
                            MovieId = 4,
                            CharacterId = 4
                        },
                        new
                        {
                            MovieId = 4,
                            CharacterId = 5
                        },
                        new
                        {
                            MovieId = 5,
                            CharacterId = 4
                        },
                        new
                        {
                            MovieId = 5,
                            CharacterId = 5
                        });
                });

            modelBuilder.Entity("MovieholicAPI.Models.Domain.Movie", b =>
                {
                    b.HasOne("MovieholicAPI.Models.Domain.Franchise", "Franchise")
                        .WithMany("Movies")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Franchise");
                });

            modelBuilder.Entity("MovieAndCharacter", b =>
                {
                    b.HasOne("MovieholicAPI.Models.Domain.Character", null)
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieholicAPI.Models.Domain.Movie", null)
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MovieholicAPI.Models.Domain.Franchise", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}